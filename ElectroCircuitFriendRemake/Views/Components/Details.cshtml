@model ElectroCircuitFriendRemake.Models.Component
@using System.IO;
@using ElectroCircuitFriendRemake.Models
@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <div class="col-md-offset-5">
        <h3>@Html.DisplayFor(model => model.Name)</h3>
        <h4>@Html.DisplayFor(model => model.ComponentCategory)</h4>
    </div>
    <hr/>
    <p>@Html.DisplayFor(model => model.Description)</p>
    <p>@Html.DisplayFor(model => model.ExtraDescription)</p>
    <hr/>
    <div class="col-md-6">
        <p class="label-info">@Html.DisplayNameFor(model => model.ComponentImage)</p>
        @if (Model.ComponentImage != "" || Model.ComponentImage != null)
        {
            var imagelink = "/uploads/" + System.IO.Path.GetFileNameWithoutExtension(Model.ComponentImage) + "-254x254" + System.IO.Path.GetExtension(Model.ComponentImage);
            <img src="@imagelink" alt="Component Image"/>
        }
    </div>
    <div class="col-md-6">
        <p class="label-info">@Html.DisplayNameFor(model => model.ComponentPinoutImage)</p>
        @if (Model.ComponentPinoutImage != "" || Model.ComponentPinoutImage != null)
        {
            var imagelink = "/uploads/" + System.IO.Path.GetFileNameWithoutExtension(Model.ComponentPinoutImage) + "-254x254" + System.IO.Path.GetExtension(Model.ComponentPinoutImage);
            <img src="@imagelink" alt="Component Image"/>
        }
    </div>
    <a href="uploads/@Model.DataSheet">@Model.Name datasheet</a>
    <hr />
    <p>Component specific things</p>
    @{
        switch (Model.ComponentCategory)
        {
            case ComponentCategories.Misc:
                break;
            case ComponentCategories.Transistor:
                break;
            case ComponentCategories.PowerSupply:
                break;
            case ComponentCategories.Resistor:
                await Html.RenderPartialAsync("Partials/Resistor", Model.Resistor);
                break;
            case ComponentCategories.Diode:
                break;
            case ComponentCategories.Led:
                break;
            case ComponentCategories.CeramicCap:
                break;
            case ComponentCategories.ElectrolyticCap:
                break;
            case ComponentCategories.Motor:
                break;
            case ComponentCategories.Servo:
                break;
            case ComponentCategories.Stepper:
                break;
            case ComponentCategories.Driver:
                break;
            case ComponentCategories.Microcontroller:
                break;
            case ComponentCategories.SingleBoardComputer:
                break;
            case ComponentCategories.Cables:
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
    }
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
